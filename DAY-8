greddy algorith -assign cookies

class Solution:
    def findContentChildren(self, g: List[int], c: List[int]) -> int:
        g.sort()
        c.sort()

        i=0
        j=0
        while i<len(g) and j<len(c):
            if c[j]>=g[i]:
                i=i+1
                
            j+=1

        return i  
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//recursions//
fun it call itself untill it meets base condition
fun calling itself and itself
in java,we dont have pointers so wee cant use reference,we use pass by value
if didn't mention base case properly we get exception called stackoverflow
recursions are used to break the code,stored the values in stack when we reach based condition it will pop
5!=5*4!
4!=4*3!
3!=3*2!
2!=2!*1!
1!=1!*0!  into a stack.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
   //Lemonade change//
import java.util.ArrayList;
import java.util.List;

public class Main {
    public static boolean lemonadeChange(List<Integer> bills) {
        int five = 0; 
        int ten = 0;   
        
        for(int i = 0; i < bills.size(); i++){
            if(bills[i] == 5){
                five++;  
            }
            else if(bills[i] == 10){
                if(five > 0){
                    five--; 
                    ten++;   
                }
                else{
                   return false;   
                } 
            }
            else {
                if(five > 0 && ten > 0){
                    five--; 
                    ten--;   
                }
                else if (five >= 3){
                    five -= 3;  
                }
                else{
                  return false;  
                }   
            }
        }
        return true;  
    }

}
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//palindrome number//
1.convert integer into string
2.use two ptrs,i=0,j=last element


class Solution:
    def isPalindrome(self, x: int) -> bool:
        x_str=str(x)
        i=0
        j=len(x_str)-1
        while i<j:
            if x_str[i]!=x_str[j]:
                return False
            i+=1
            j-=1    
        return True 

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
