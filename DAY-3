//NESTED LOPPS//
A loop  inside a loop is nested loop.
for every problem (2 or 3) type of solutions:
1.Bruteforce(2 loops) most of solutions.so its complexity is o(n^2)    2.better/optimal
class Main{
  public static void main(String args[]{
   for(int i=1;i<=5;i++){
      for(int j=1;j<=5;j++){
}
}
}
}
********************************>
      //printing  star patterns//
1.print no.of rows                                      
2.print no.of cols
3.what to,what not to print                                  
class Main {
    public static void main(String[] args) {
      
      for(int i=1;i<=5;i++){
          for(int j=1;j<=5;j++){
              System.out.print("*");
          }
          System.out.println();
      }
    }
}
o/p:
*****
*****
*****
*****
*****
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     
class Main {
    public static void main(String[] args) {
      
      for(int i=1;i<=5;i++){
          for(int j=1;j<=5;j++){
              if(i==1||i==5||j==1||j==5||i+j==6){
                  System.out.print("*");
              }
              else{
                  System.out.print(" ");
              }
          }
          
          
          System.out.println("");
      }
    }
}
o/p:
*****
*  **
* * *
**  *
*****
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    //prime number//
boolean prime(int n){
   for(int i=2;i<n;i++){
  if(n%i==0){
   return False
}
}
return True
}
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        //armstrong number//
imoprt java.util.Scanner;
 class ArmstrongNumber {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter a number: ");
        int num = sc.nextInt();

        int originalNum = num;
        int result = 0;
        int n = String.valueOf(num).length();

        while (num > 0) {
            int digit = num % 10;
            result += Math.pow(digit, n);
            num /= 10;
        }

        if (result == originalNum) {
            System.out.println(originalNum + " is an Armstrong number.");
        } else {
            System.out.println(originalNum + " is not an Armstrong number.");
        }

        sc.close();
    }
}
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


